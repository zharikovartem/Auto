{
	// Place your snippets for typescriptreact here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"React Create Funck Comp": {
		"prefix": ["1rfc", "for-const"],
		// "body": ["for (const ${2:element} of ${1:array}) {", "\t$0", "}"],
		"body": [
			"import React from 'react'", 
			"", 
			"const ${1:ComponentName}:React.FC<${1:ComponentName}PropsType> = (props) => {",
			"",
			"\treturn (",
			"\t\t<>${1:ComponentName}</>",
			"\t)",
			"}",
			"",
			"export default  ${1:ComponentName}",
			"",
			"type ${1:ComponentName}PropsType = {",
			"",
			"}"
		],
			
		"description": "React functional component"
	},

	"Create Container": {
		"prefix": ["1cmp", "for-const"],
		"body": [
			"import {connect} from 'react-redux'",
			"import { AppStateType } from './../Redux/store'",
			"import ${1:ComponentName} from './${1:ComponentName}'",
			"",
			"type MapPropsType = ReturnType<typeof mapStateToProps>",
			"",
			"type MapDispatchPropsType = {",
			"\t",
			"}",
			"type Own${1:ComponentName}PropsType = {",
			"\t",
			"}",
			"",
			"export type MainPropsType = MapPropsType & MapDispatchPropsType & Own${1:ComponentName}PropsType",
			"",
			"let mapStateToProps = (state:AppStateType) => {",
			"\treturn {",
			"\t\t",
			"\t}",
			"}",
			"",
			"export default connect<MapPropsType, MapDispatchPropsType, Own${1:ComponentName}PropsType, AppStateType>(mapStateToProps,",
    		"\t{  }",
    		"\t)",
			"(${1:ComponentName})",
		]
	},

	"useEffect": {
		"prefix": ["1useEffect", "for-const"],
		"body": [
			"useEffect(() => {",
			"\t",
			"}, []);"
		],
		"description": "add useEffect to code"
	}
}